from flask import Flask, render_template, jsonify

app = Flask(__name__)

# Данные проектов
projects = {
    "project1": {
        "title": "Танцующие лилии",
        "description": "Идея. Идея возникла благодаря цветущим у меня на подоконнике аммарилисам, тропическим родственникам лилий, отличающихся необыкновенно яркой окраской и гигантским размером своих многочисленных цветков. Время цветения – настоящий праздник, но длится он всего два раза в году по 4 дня. Описание. Проект представляет собой макет водных лилий на озере (к сожалению, в силу размеров проекта и расстояния, мы смогли принести только внутреннюю, непосредственно рабочую часть макета, а художественное оформление оставили в школе; во время выступления я покажу фильм, где участвуют все части проекта, в.т.ч. и оформление). Макет еще не готов: не сделано оформление цветов, т.к. я надеюсь немного усовершенствовать их (об этом позднее). Рассмотрим макет. Он очень прост в использовании, надежен, легок для сборки-разборки, ремонта за счет крепости. Сбоку расположены кнопки включения и выключения, переключения музыки, регулятор громкости, переключение направления вращения двигателя, настройка скорости. Имеются входы для питания (работает как на батарейках, так и из сети) и колонок."
    },
    "project2": {
        "title": "Современный ошейник для собак",
        "description": "Основные функции: 1. Дистанционная активация сигнализации через брелок (радиус до 100 м): включает светодиодную подсветку (красный, жёлтый, синий) и звуковые сигналы для привлечения внимания. Отключается только кнопкой на ошейнике. 2. Автономный режим при потере связи: если сигнал не поступает длительное время, ошейник воспроизводит записанное голосовое сообщение с контактами хозяина. 3. Подсветка для безопасности в темноте."
    },
    "project3": {
        "title": "Ж/д переезд Новопеределкино",
        "description": "Проект включает проектирование макета электрифицированной железной дороги с моделями вагонов и инфраструктурой; создание миниатюрной железной дороги с реалистичной инфраструктурой и моделями вагонов."
    },
    "project4": {
        "title": "Танковый биатлон",
        "description": "Создание роботов-танков для соревнований: управление по радиоканалу 2.4 ГГц, соревновательные задания по точности и скорости."
    },
    "project5": {
        "title": "Экскаватор",
        "description": "Модель экскаватора с дистанционным управлением для опасных условий работы; управление осуществляется через пульт или компьютер."
    }
}

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/get_projects')
def get_projects():
    # Возвращаем список всех проектов
    return jsonify(list(projects.keys()))

@app.route('/get_project/<project_id>')
def get_project(project_id):
    # Возвращаем данные конкретного проекта
    project = projects.get(project_id)
    if project:
        return jsonify(project)
    else:
        return jsonify({"error": "Проект не найден"}), 404

if __name__ == '__main__':
    app.run(debug=True)